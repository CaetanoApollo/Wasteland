import time
import random
import tkinter as tk
from tkinter import *
import os
from pygame import mixer
from PIL import Image, ImageTk
from tkinter import font as tkfont
from tkinter import messagebox, Entry, Button


root = tk.Tk()
root.title("Wasteland - Aventura P√≥s-Apocal√≠ptica")

# Fun√ß√£o para imprimir texto com atraso
def delay_print(text, delay=0.03):
    for char in text:
        text_widget.config(state=tk.NORMAL)
        text_widget.insert(tk.END, char)
        text_widget.see(tk.END)
        text_widget.config(state=tk.DISABLED)
        root.update()
        time.sleep(delay)
    text_widget.config(state=tk.NORMAL)
    text_widget.insert(tk.END, "\n")
    text_widget.see(tk.END)
    text_widget.config(state=tk.DISABLED)
    root.update()

# Fun√ß√£o para verificar se o jogador acertou
def is_hit_successful(success_rate=70):
    return random.randint(1, 100) <= success_rate

# Fun√ß√£o para lidar com o jogo terminado
def game_over(message="Voc√™ perdeu! ‚ò†Ô∏è"):
    messagebox.showinfo("Game Over", message)
    play_again()

# Fun√ß√£o para lidar com a vit√≥ria do jogador
def victory():
    messagebox.showinfo("Vit√≥ria", "Parab√©ns, voc√™ venceu! ü•≥ü•≥")
    play_again()


def nao():
    delay_print("\nObrigado por jogar. At√© a pr√≥xima!\n")
    root.destroy()

# Fun√ß√£o para reiniciar o jogo
def play_again():
    delay_print("Deseja jogar novamente?")
    choice_button_1.config(text="Sim", command=start_game)
    choice_button_2.config(text="N√£o", command=nao)

# Fun√ß√£o para iniciar o jogo
def start_game():
    play_sound("The_Last_Of_us_Theme_song.mp3")
    global player_name  # Vari√°vel para armazenar o nome do jogador

    delay_print("Voc√™ est√° num mundo p√≥s-apocal√≠ptico e encontra uma cabana em uma floresta.")
    time.sleep(1)
    delay_print("Voc√™ est√° totalmente desequipado. O que voc√™ decide fazer?")
    time.sleep(1)

    choice_button_1.config(text="1- Entrar na cabana e revistar a procura de equipamentos", command=choose_option1)
    choice_button_2.config(text="2- Decide n√£o entrar na cabana e sair do meio da floresta", command=choose_option2)

    choice_button_1.config(state=tk.NORMAL)
    choice_button_2.config(state=tk.NORMAL)

def choose_option1():
    delay_print("Voc√™ revista toda a casa e encontra roupas quentes, uma mochila, um machado e uma pistola sem muni√ß√£o.")
    has_backpack = True
    has_axe = True
    has_pistol = True
    ammo_pistol.set(0)

    delay_print("\nVoc√™ sai da cabana e encontra uma camionete perto dela.")
    choice_button_1.config(text="1- Voc√™ for√ßa a porta para abrir", command=choose_option3)
    choice_button_2.config(text="2- Voc√™ procura a chave", command=choose_option4)

def choose_option2():
    delay_print("Voc√™ anda por alguns minutos e √© atacado por um zumbi e morre em poucos minutos.")
    game_over()

def choose_option3():
    delay_print("Voc√™ n√£o consegue abrir a porta e tenta procurar a chave por perto.")
    delay_print("Voc√™ encontra a chave do carro e abre ele.")
    time.sleep(1)

    delay_print("\nVoc√™ vaga pelo caminho e avista fuma√ßa em uma parte da floresta.")
    choice_button_1.config(text="1- Voc√™ vai at√© l√° ver o que √© aquilo", command=choose_option5)
    choice_button_2.config(text="2- Voc√™ decide n√£o arriscar e seguir seu caminho", command=choose_option6)

def choose_option4():
    ammo_pistol.set(ammo_pistol.get() + 10)

    delay_print("Voc√™ encontra a chave e abre a camionete. Ao vasculhar o ve√≠culo, encontra 10 muni√ß√µes para a sua pistola.")

    delay_print("\nVoc√™ vaga pelo caminho e avista fuma√ßa em uma parte da floresta.")
    choice_button_1.config(text="1- Voc√™ vai at√© l√° ver o que √© aquilo", command=choose_option5)
    choice_button_2.config(text="2- Voc√™ decide n√£o arriscar e seguir seu caminho", command=choose_option6)

def choose_option5():
    delay_print("Voc√™ vai at√© l√° e encontra 2 pessoas.")
    time.sleep(1)

    choice_button_1.config(text="1- Voc√™ as cumprimenta pacificamente", command=choose_option7)
    choice_button_2.config(text="2- Voc√™ as hostiliza e entra em um combate", command=be_hostile)

def choose_option6():
    delay_print("Voc√™ encontra uma horda de zumbis e n√£o consegue enfrentar todos sozinho.")
    game_over()

def choose_option7():
    delay_print("\nVoc√™ as cumprimenta pacificamente.")
    name_window = tk.Toplevel(root)
    name_window.title("Digite o seu nome")

    name_label = tk.Label(name_window, text="Digite o seu nome:")
    name_label.pack()

    name_entry = Entry(name_window)
    name_entry.pack()

    confirm_button = Button(name_window, text="Confirmar Nome", command=lambda: get_player_name(name_entry, name_window))
    confirm_button.pack()

def get_player_name(name_entry, name_window):
    global player_name  # Vari√°vel para armazenar o nome do jogador
    player_name = name_entry.get()
    name_window.destroy()  # Fecha a janela de entrada de nome
    delay_print(f"Voc√™ se apresenta como {player_name}.")
    choose_option8()

def choose_option8():
    delay_print("Voc√™ descansa por uma noite e fica bem alimentado. De manh√£ cedo, voc√™ parte.")
    time.sleep(1)
    final_game()

def be_hostile():
    delay_print("\nQual arma voc√™ escolhe?")
    
    # Criar bot√µes para as op√ß√µes do jogador
    choice_button_1.config(text="1 - Voc√™ pega a pistola", command=choose_pistol)
    choice_button_2.config(text="2 - Voc√™ pega o machado", command=choose_axe)

# Fun√ß√£o para escolher a pistola
def choose_pistol():
    delay_print("\nVoc√™ erra o primeiro tiro e acerta em uma barraca deles. Eles se assustam e come√ßam a correr para se proteger.")
    time.sleep(1)
    delay_print("Tentar atirar novamente?")
    
    # Criar bot√µes para as op√ß√µes do jogador
    choice_button_1.config(text="1 - Sim", command=choose_second_shot)
    choice_button_2.config(text="2 - N√£o", command=choose_no_second_shot)
    

# Fun√ß√£o para escolher o machado
def choose_axe():
    delay_print("\nVoc√™ decide n√£o atirar e pega o machado para entrar em um combate corpo a corpo.")
    if is_hit_successful():
            delay_print("Voc√™ corre em dire√ß√£o √† pessoa da frente e d√° 2 golpes r√°pidos, acertando apenas um deles na barraca dela e fazendo um corte profundo.")
            delay_print("A pessoa cai no ch√£o e agoniza de dor.")
            time.sleep(1)
            if is_hit_successful():
                delay_print("Voc√™ vai em dire√ß√£o √† segunda pessoa e acaba levando um soco no rosto sem esperar.")
                delay_print("Voc√™ cai no ch√£o, mas consegue se levantar e come√ßa a lutar no soco com ela.")
                delay_print("Voc√™ consegue vencer a luta e as duas pessoas ficam imobilizadas.")
                delay_print("Voc√™ revista o acampamento e encontra alguns itens:")
                delay_print("- Botas")
                delay_print("- Muni√ß√£o para sua pistola (30 balas)")
                delay_print("- Cantil com √°gua")
                delay_print("- Algumas latas de comidas")
                delay_print("- Saco de dormir")
                delay_print("Voc√™ passa a noite no acampamento e parte logo de manh√£ com a sua camionete.")
                final_game()

def choose_second_shot():
    if is_hit_successful():
        delay_print("\nVoc√™ acerta o segundo tiro em uma das pessoas e ela cai no ch√£o.")
        time.sleep(1)
        delay_print("Voc√™ est√° com 8 muni√ß√µes restantes.")
        delay_print("Continuar com a pistola ou pegar o machado?.")
        
        # Criar bot√µes para as op√ß√µes do jogador
        choice_button_1.config(text="1 - Pegar o machado", command=choose_axe)
        choice_button_2.config(text="2 - Continuar com a pistola", command=continue_with_pistol)
        
    else:
        delay_print("Voc√™ errou o golpe e a pessoa conseguiu escapar. Eles fogem do acampamento e voc√™ n√£o consegue encontr√°-los novamente.")
        game_over()

def choose_no_second_shot():
    delay_print("Voc√™ decide n√£o atirar novamente e elas fogem do acampamento. Voc√™ n√£o consegue encontr√°-las novamente.")
    game_over()

def continue_with_pistol():
    delay_print("\nVoc√™ decide continuar com a pistola.")
    delay_print("Enquanto recarrega sua arma, as duas pessoas fogem e voc√™ n√£o consegue encontr√°-las novamente.")
    game_over()

def final_game():
    delay_print("Depois de sair do acampamento voc√™ pega a sua camionete e segue at√© uma rua bifurcada")
    delay_print("Qual rua voc√™ segue?")
    choice_button_1.config(text="1- Direita", command=choose_option15)
    choice_button_2.config(text="2- Esquerda", command=choose_option16)

def choose_option15():
    delay_print("Voc√™ segue por 50 km sem nenhum sinal de vida. Na frente, voc√™ observa 5 motos vindo em sua dire√ß√£o e eles sacam suas armas e atiram em seu carro.")
    time.sleep(1)
    delay_print("Voc√™ √© acertado pelos tiros e acaba morrendo.")
    game_over()

def choose_option16():
    delay_print("Voc√™ segue pelo caminho a esquerda e acaba de cruzar a ponte de sua cidade, assim viajando por todo o estado.")
    time.sleep(1)
    delay_print("Finalmente, voc√™ consegue avisar as autoridades sobre a situa√ß√£o da cidade onde eles conseguem fazer pesquisas sobre como tudo aquilo come√ßou, onde cientistas come√ßam a estudar os zumbis e come√ßar a desenvolver uma cura.")
    victory()

# Inicializa vari√°veis de estado do jogo
has_backpack = False
has_axe = False
has_pistol = False
ammo_pistol = tk.IntVar()
player_name = ""

# Cria uma √°rea de texto para exibir o texto do jogo
text_widget = tk.Text(root, wrap=tk.WORD, height=15, width=60, fg="white", bg="black", font=tkfont.Font)
text_widget.config(state=tk.DISABLED)
text_widget.pack()

# Estiliza√ß√£o
root.configure(bg="black")
font = tkfont.Font(family="Arial" , size="10" , weight="bold")
button_font = tkfont.Font(family="Arial", size=12, slant="italic")

icon = tk.PhotoImage(file='pistol.png')
root.iconphoto(True, icon)


def play_sound(audio_filename):
    try:
        mixer.init()
        audio_path = os.path.join(audio_filename)
        mixer.music.load(audio_path)
        mixer.music.play()
    except Exception as e:
        print(f"Erro ao reproduzir √°udio: {str(e)}") 

# Cria bot√µes para escolhas do jogador
choice_button_1 = tk.Button(root, text="1 - Escolher op√ß√£o 1", bg="red", fg="black", font=button_font)
choice_button_2 = tk.Button(root, text="2 - Escolher op√ß√£o 2", bg="red", fg="black", font=button_font)
choice_button_1.config(state=tk.DISABLED)
choice_button_2.config(state=tk.DISABLED)
choice_button_1.pack(padx=10, pady=10)
choice_button_2.pack(padx=10, pady=10)

# Inicializa o jogo
start_game()

root.mainloop()